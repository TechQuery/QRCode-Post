//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('index', factory);
    else if (typeof module === 'object')
        return  module.exports = factory();
    else
        return  this['index'] = factory();

})(function () {

function merge(base, path) {

    return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {

        return input[index - 1] === '.' ? match : '';
    });
}

function outPackage(name) {
    return (/^[^./]/.test(name)
    );
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                outPackage( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _module_ = {
    './DragSelector': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _ElementBase = require('./ElementBase');

            var _ElementBase2 = _interopRequireDefault(_ElementBase);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            var DragSelector = function (_ElementBase2$default) {
                _inherits(DragSelector, _ElementBase2$default);

                function DragSelector(image, onStart, onEnd) {
                    var _this;

                    _classCallCheck(this, DragSelector);

                    (_this = _possibleConstructorReturn(this, (DragSelector.__proto__ || Object.getPrototypeOf(DragSelector)).call(this, image)), _this).rect = [];

                    var endBack = function endBack(event) {

                        if (_this.rect[0] && !_this.rect[1]) onEnd(_this.rect[1] = _this.coordOf(event));
                    };

                    _this.on('mousedown', function (event) {

                        onStart(_this.rect[0] = _this.coordOf(event));

                        _this.rect[1] = null;
                    }).on('mouseup', endBack).on('mouseout', endBack);
                    return _this;
                }

                _createClass(DragSelector, [{
                    key: 'coordOf',
                    value: function coordOf(event) {

                        return [event.clientX - this.root.offsetLeft, event.clientY - this.root.offsetTop];
                    }
                }, {
                    key: 'clear',
                    value: function clear() {
                        this.rect.length = 0;
                    }
                }, {
                    key: 'select',
                    value: function select(type, x, y) {
                        return this.rect[type] = [+x, +y];
                    }
                }]);

                return DragSelector;
            }(_ElementBase2.default);

            exports.default = DragSelector;
        }
    },
    './ElementBase': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var ElementBase = function () {
                function ElementBase(root) {
                    _classCallCheck(this, ElementBase);

                    if (this.constructor === ElementBase) throw new TypeError('"ElementBase" is an Abstract class');

                    this.root = root instanceof Element ? root : document.querySelector(root);
                }

                _createClass(ElementBase, [{
                    key: 'on',
                    value: function on(event, handler) {

                        this.root.addEventListener(event, handler);

                        return this;
                    }
                }]);

                return ElementBase;
            }();

            exports.default = ElementBase;
        }
    },
    './Drawer': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _ElementBase = require('./ElementBase');

            var _ElementBase2 = _interopRequireDefault(_ElementBase);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            var Drawer = function (_ElementBase2$default2) {
                _inherits(Drawer, _ElementBase2$default2);

                function Drawer(canvas) {
                    var _this2;

                    _classCallCheck(this, Drawer);

                    (_this2 = _possibleConstructorReturn(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call(this, canvas)), _this2).context = _this2.root.getContext('2d');
                    return _this2;
                }

                _createClass(Drawer, [{
                    key: 'draw',
                    value: function draw(image, x, y, width, height) {

                        this.context.drawImage(image, x || 0, y || 0, width || image.naturalWidth, height || image.naturalHeight);
                    }
                }, {
                    key: 'drawBackground',
                    value: function drawBackground(image) {

                        this.root.width = image.naturalWidth, this.root.height = image.naturalHeight;

                        this.draw(image);
                    }
                }, {
                    key: 'clear',
                    value: function clear() {

                        this.context.clearRect(0, 0, this.root.width, this.root.height);

                        this.root.width = this.root.height = 0;
                    }
                }]);

                return Drawer;
            }(_ElementBase2.default);

            exports.default = Drawer;
        }
    },
    './utility': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.read = read;
            exports.imageOf = imageOf;
            exports.QRCodeOf = QRCodeOf;
            exports.squareOf = squareOf;
            function read(file) {

                var reader = new FileReader();

                return new Promise(function (resolve, reject) {

                    reader.onload = function () {
                        return resolve(reader.result);
                    };

                    reader.onerror = reject;

                    reader.readAsDataURL(file);
                });
            }

            function imageOf(URI) {

                var image = new Image();

                return new Promise(function (resolve, reject) {

                    image.onload = function () {
                        return resolve(image);
                    }, image.onerror = reject;

                    image.src = URI;
                });
            }

            function QRCodeOf(raw) {

                var code = qrcode(0, 'H');

                code.addData(raw);

                code.make();

                return code.createDataURL();
            }

            function squareOf(rect) {

                var size = [rect[1][0] - rect[0][0], rect[1][1] - rect[0][1]];

                var square = [rect[0]];

                square[1] = size[0] < size[1] ? [rect[1][0], rect[0][1] + size[0]] : [rect[0][0] + size[1], rect[1][1]];

                return square;
            }
        }
    },
    './index': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            var _this3 = this;

            var _utility = require('./utility');

            var _Drawer = require('./Drawer');

            var _Drawer2 = _interopRequireDefault(_Drawer);

            var _DragSelector = require('./DragSelector');

            var _DragSelector2 = _interopRequireDefault(_DragSelector);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            var drawer = new _Drawer2.default('canvas');

            // Load image

            var form = document.querySelector('form');

            form.image.onchange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var image;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                image = this.files[0];

                                if (!image) {
                                    _context.next = 13;
                                    break;
                                }

                                _context.t0 = drawer;
                                _context.t1 = (0, _utility.imageOf);
                                _context.next = 6;
                                return (0, _utility.read)(image);

                            case 6:
                                _context.t2 = _context.sent;
                                _context.next = 9;
                                return (0, _context.t1)(_context.t2);

                            case 9:
                                _context.t3 = _context.sent;

                                _context.t0.drawBackground.call(_context.t0, _context.t3);

                                _context.next = 14;
                                break;

                            case 13:
                                drawer.clear(), form.reset();

                            case 14:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            // Select area

            var output = document.querySelectorAll('form [readonly]');

            var selector = new _DragSelector2.default('canvas', function (coord) {
                return output[0].value = coord;
            }, function (coord) {
                return output[1].value = coord;
            });

            // Print QRCode

            form.onsubmit = function () {
                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(event) {
                    var image, square;
                    return regeneratorRuntime.wrap(function _callee2$(_context2) {
                        while (1) {
                            switch (_context2.prev = _context2.next) {
                                case 0:

                                    event.preventDefault();

                                    _context2.next = 3;
                                    return (0, _utility.imageOf)((0, _utility.QRCodeOf)(this.URL.value));

                                case 3:
                                    image = _context2.sent;

                                    if (!(selector.rect.length < 2)) {
                                        _context2.next = 6;
                                        break;
                                    }

                                    return _context2.abrupt('return', drawer.draw(image));

                                case 6:
                                    square = (0, _utility.squareOf)(selector.rect);


                                    drawer.draw(image, square[0][0], square[0][1], square[1][0] - square[0][0], square[1][1] - square[0][1]);

                                case 8:
                                case 'end':
                                    return _context2.stop();
                            }
                        }
                    }, _callee2, this);
                }));

                return function (_x) {
                    return _ref2.apply(this, arguments);
                };
            }();

            form.onreset = function () {

                drawer.clear(), selector.clear();

                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = Array.from(form.elements)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var field = _step.value;
                        field.disabled = false;
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return) {
                            _iterator.return();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
            };

            // Preset parameters

            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                var parameter, image, start, end;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                parameter = new URLSearchParams(location.search);
                                image = parameter.get('image'), start = parameter.get('start'), end = parameter.get('end');

                                if (!image) {
                                    _context3.next = 9;
                                    break;
                                }

                                _context3.t0 = drawer;
                                _context3.next = 6;
                                return (0, _utility.imageOf)(image);

                            case 6:
                                _context3.t1 = _context3.sent;

                                _context3.t0.drawBackground.call(_context3.t0, _context3.t1);

                                form.image.disabled = true;

                            case 9:

                                if (start) {

                                    form.start.value = selector.select.apply(selector, [0].concat(_toConsumableArray(start.split(','))));

                                    form.start.disabled = true;
                                }

                                if (end) {

                                    form.end.value = selector.select.apply(selector, [1].concat(_toConsumableArray(end.split(','))));

                                    form.end.disabled = true;
                                }

                            case 11:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, _this3);
            }))();
        }
    }
};

    return require('./index');
});